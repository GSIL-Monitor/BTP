(function (win, doc, $) { if (!win.ispinner) { win.ispinner = function (options) { $ = win.jQuery || win.Zepto; var defaults = { cls: "ispinner", autoInit: true, callbacks: function (el) { }, init: function () { var input = $("input[class=" + options.cls + "][type=number]"); input.each(function () { var input = $(this); var val = parseInt(input.val()); var min = parseInt(input.attr("min")); var max = parseInt(input.attr("max")); val = val < min || isNaN(val) ? min : val; val = val > max ? max : val; input.val(val); var disable = (val >= max ? " ispinner-disable-right" : "") + (val <= min ? " ispinner-disable-left" : ""); if (input.attr("ispinner")) { input.parent().removeClass("ispinner-disable-right ispinner-disable-left").addClass(disable); } else { input.attr("ispinner", "true").wrap("<div class='ispinner-box" + disable + "'></div>"); input.after("<a href='javascript:void(0)' class='plus'>+</a>").before("<a href='javascript:void(0)' class='minus'>-</a>"); } }); } }; options = $.extend(defaults, options); var ua = win.navigator.userAgent; var ie = /MSIE [5-8]/.test(ua) || doc.documentMode < 9; var operaMini = /Opera Mini/.test(ua); var computed = win.getComputedStyle; var isPointer = win.PointerEvent || win.MSPointerEvent; var isTouch = "onclick" in win; var isMobile = /mobile|tablet|phone|ip(ad|od)|android|silk|webos/i.test(ua); $(doc).off("click").on("click", ".ispinner-box", function (event) { var self = $(this); var input = self.find("input"); var iw = input.width(); var val = parseInt(input.val()); var min = parseInt(input.attr("min")); var max = parseInt(input.attr("max")); updata(); if ($(event.target).is(".minus")) { updata("minus"); options.callbacks(event); } else { if ($(event.target).is(".plus")) { updata("plus"); options.callbacks(event); } } function updata(c) { val = val < min ? min : val; val = val > max ? max : val; input.val(val); if (c == "minus" && val > min) { val = val - 1; input.val(val); } else { if (c == "plus" && val < max) { val = val + 1; input.val(val); } } if (val <= min) { self.addClass("ispinner-disable-left"); } else { self.removeClass("ispinner-disable-left"); } if (val >= max) { self.addClass("ispinner-disable-right"); } else { self.removeClass("ispinner-disable-right"); } } })/*.on("blur",".ispinner-box input",function(event){options.init();options.callbacks(event);}).on("click",".ispinner-box input",function(){$(this)[0].select();})*/.ready(function () { options.init(); }); }; } } (window, document)); $(function () { ispinner(); });