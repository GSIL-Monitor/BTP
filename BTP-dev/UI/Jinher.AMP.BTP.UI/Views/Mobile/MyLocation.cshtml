@{
    Layout = "~/Views/Shared/_MobileBaseLayout.cshtml";
}
@section TitleHtml
{
    <title>切换位置</title>
}
@section CssStyles{
    <link rel="stylesheet" href="../../Content/Mobile/zphStyle/mobileKit-min.css" />
    <link rel="stylesheet" href="../../Content/Mobile/zphStyle/place.css" />
}
<div class="page">
    <header class="bar bar-nav">
        <h1 class="title">切换位置</h1>
        <a  id="goBack" class="fa fa-chevron-left pull-left" ></a>
    </header>
    <div class="content">
        <div class="ui-search-wrap">
            <div class="ui-searchbar">
                <li class="fa fa-search"></li>
                <div class="ui-searchbar-text">
                    搜索关键字</div>
                <div class="ui-searchbar-input">
                    <input type="text" class="cityinput" id="citySelect" placeholder="搜索关键字" value="" />
                </div>
                <li class="fa fa-times"></li>
            </div>
            <div class="ui-searchbar-cancel">
                取消</div>
        </div>
        <div class="ui-place-list">
            <ul id="CityInfo" class="table-view">
            </ul>
        </div>
        <div id="rightIndex" class="anchor">
        </div>
    </div>
</div>
@section ClientScript
{
    <script src="/Content/Mobile/myLocation.js" type="text/javascript"></script>
    <script type="text/javascript" language="javascript" src="https://webapi.amap.com/maps?v=1.3&key=@Jinher.AMP.BTP.Common.CustomConfig.AmapKey"></script>
    <script type="text/javascript">
        function InitLbs() {
            var cityCode = getCookie('cityCode');
            var cityName = getCookie('cityName');
            if (!JsVilaDataNull(cityCode) || !JsVilaDataNull(cityName)) {

                var mapObj = new AMap.Map('iCenter');

                mapObj.plugin(["AMap.CitySearch"], function () {
                    //实例化城市查询类
                    var citysearch = new AMap.CitySearch();
                    //自动获取用户IP，返回当前城市
                    citysearch.getLocalCity();
                    AMap.event.addListener(citysearch, "complete", function (result) {
                        cityCode = "110000";
                        cityName = "北京市";
                        if (result && result.city && result.bounds) {
                            var cityinfo = result.city;
                            cityCode = getCityCode(cityinfo);
                            cityName = cityinfo;
                        }
                        setSessionCookie("cityCode", cityCode);
                        setSessionCookie("cityName", cityName);
                        $("#currenCity").text(cityName);
                    });
                    AMap.event.addListener(citysearch, "error", function (result) { toast(result.info); });
                });
            } else {
                $("#currenCity").text(cityName);
            }
        }


        function goBack(isOk) {
            var backUrl = getQueryString('callBackUrl');
            if (JsVilaDataNull(backUrl)) {
                backUrl = backUrl.replace(/&iscl=[^&]*/g, "");
                backUrl = backUrl.replace(/\?iscl=[^&]*&/g, "\?");
                if (isOk) {
                    if (backUrl.indexOf('?') > 0) {
                        backUrl += "&iscl=1";
                    } else {
                        backUrl += "?iscl=1";
                    }
                }
                window.location.href = backUrl;
            }
            return;
        }
        function LoadInit() {
            var searchResult1 = [];
            var rightResult = [];
            var rightLetters = document.getElementById("rightIndex");
            rightLetters.style.display = "block";
            var strOne;
            var strTwo;
            strOne = '<li id="pos" class="table-view-diviter current-tit">当前位置</li><li class="current-place"> <a id="currenCity" href="javascript:;">北京市</a></li>';
            searchResult1.push(strOne);
            strTwo = '<a data-letter="pos">#</a>';
            rightResult.push(strTwo);
            var cityInfo = document.getElementById("CityInfo");
            var cityIndex = document.getElementById("rightIndex");
            for (var j = 0, m = Vcity.allLetter.length; j < m; j++) {
                var str;
                var value = Vcity.allLetter[j];

                strTwo = '<a data-letter="' + value + '">' + value + '</a>'; //增加右边大写字母
                rightResult.push(strTwo);
                var count = 0;
                // 当value不等于空的时候执行
                if (value !== '') {
                    str = ' <li  class="table-view-diviter"><a id="' + value + '">' + value + '</a></li>'; //显示控件中我的位置
                    searchResult1.push(str);
                    for (var i = 0, n = Vcity.allCity.length; i < n; i++) {
                        var reg = new RegExp("^" + value + "|\\|" + value, 'gi');
                        if (reg.test(Vcity.allCity[i].SearchStr)) {
                            count++;
                            str = '<li class="table-view-cell" data-citycode="' + Vcity.allCity[i].AreaCode + '" data-cityname="' + Vcity.allCity[i].Name + '"><a href="javascript:;">' + Vcity.allCity[i].Name + '</a></li>';
                            searchResult1.push(str);
                        }
                    }
                    if (count == 0)
                        searchResult1.pop(str);
                }
            }
            cityIndex.innerHTML = rightResult.join('');
            cityInfo.innerHTML = searchResult1.join('');
        }       
    </script>
    <script type="text/javascript">

        /* *
        * 全局空间 Vcity
        * */
        var Vcity = {};
        /* *
        * 静态方法集
        * 
        * */
        Vcity._m = {
            /* 选择元素 */
            $: function (arg, context) {
                var tagAll, n, eles = [], i, sub = arg.substring(1);
                context = context || document;
                if (typeof arg == 'string') {
                    switch (arg.charAt(0)) {
                        case '#':
                            return document.getElementById(sub);
                            break;
                        case '.':
                            if (context.getElementsByClassName) return context.getElementsByClassName(sub);
                            tagAll = Vcity._m.$('*', context);
                            n = tagAll.length;
                            for (i = 0; i < n; i++) {
                                if (tagAll[i].className.indexOf(sub) > -1) eles.push(tagAll[i]);
                            }
                            return eles;
                            break;
                        default:
                            return context.getElementsByTagName(arg);
                            break;
                    }
                }
            },

            /* 绑定事件 */
            on: function (node, type, handler) {
                node.addEventListener ? node.addEventListener(type, handler, false) : node.attachEvent('on' + type, handler);
            },

            /* 获取事件 */
            getEvent: function (event) {
                return event || window.event;
            },

            /* 获取事件目标 */
            getTarget: function (event) {
                return event.target || event.srcElement;
            },

            /* 获取元素位置 */
            getPos: function (node) {
                var scrollx = document.documentElement.scrollLeft || document.body.scrollLeft,
                    scrollt = document.documentElement.scrollTop || document.body.scrollTop;
                var pos = node.getBoundingClientRect();
                return { top: pos.top + scrollt, right: pos.right + scrollx, bottom: pos.bottom + scrollt, left: pos.left + scrollx }
            },

            /* 添加样式名 */
            addClass: function (c, node) {
                if (!node) return;
                node.className = Vcity._m.hasClass(c, node) ? node.className : node.className + ' ' + c;
            },

            /* 移除样式名 */
            removeClass: function (c, node) {
                var reg = new RegExp("(^|\\s+)" + c + "(\\s+|$)", "g");
                if (!Vcity._m.hasClass(c, node)) return;
                node.className = reg.test(node.className) ? node.className.replace(reg, '') : node.className;
            },

            /* 是否含有CLASS */
            hasClass: function (c, node) {
                if (!node || !node.className) return false;
                return node.className.indexOf(c) > -1;
            },

            /* 阻止冒泡 */
            stopPropagation: function (event) {
                event = event || window.event;
                event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
            },
            /* 去除两端空格 */
            trim: function (str) {
                return str.replace(/^\s+|\s+$/g, '');
            }
        };
        Vcity.allCity = [];

        /* 正则表达式 筛选中文城市名、拼音、首字母 */
        Vcity.regEx = /^([\u4E00-\u9FA5\uf900-\ufa2d]+)\|(\w+)\|(\w)\w*$/i;
        Vcity.regExChiese = /([\u4E00-\u9FA5\uf900-\ufa2d]+)/;

        /* *
        * 城市控件构造函数
        * 
        * */

        Vcity.CitySelector = function () {
            this.initialize.apply(this, arguments);
        };

        Vcity.CitySelector.prototype = {

            constructor: Vcity.CitySelector,

            /* 初始化 */

            initialize: function (options) {
                this.initData();
                var input = options.input;
                this.input = Vcity._m.$('#' + input);
                this.inputEvent();
            },
            initData: function () {
                var allCities = [];
                allCities = getAllCities();
                for (var i = 0, n = allCities.length; i < n; i++) {

                    var city = allCities[i];
                    city.SearchStr = Vcity._m.trim(allCities[i].Name) + '|' + Vcity._m.trim(allCities[i].SpellCode) + '|' + Vcity._m.trim(allCities[i].SpellCode);
                    Vcity.allCity[i] = city;
                }
            },
            inputEvent: function () {
                var that = this;
                Vcity._m.on(this.input, 'focus', function () {
                    that.input.select();
                    if (that.input.value == '搜索关键字') that.input.value = '';
                });
                Vcity._m.on(this.input, 'blur', function () {
                    if (that.input.value == '') that.input.value = '搜索关键字';
                });
                Vcity._m.on(this.input, 'keyup', function (event) {
                    event = event || window.event;
                    var keycode = event.keyCode;
                    var rightLetters = document.getElementById("rightIndex");
                    rightLetters.style.display = "none";
                    $("#CityInfo").show();
                    that.createUl();

                });
            },

            /* *
            * 根据输入内容检索城市名称
            * 
            * */
            createUl: function () {
                var value = Vcity._m.trim(this.input.value);
                // 当value不等于空的时候执行
                if (value !== '') {
                    // 此处需设置中文输入法也可用onpropertychange
                    var searchResult = [];
                    $("#CityInfo").empty();
                    //var x = document.getElementById("CityInfo");
                    for (var i = 0, n = Vcity.allCity.length; i < n; i++) {
                        var reg = new RegExp("^" + value + "|\\|" + value, 'gi');
                        if (reg.test(Vcity.allCity[i].SearchStr)) {
                            var $li = $('<li class="table-view-cell"><a href="javascript:;">' + Vcity.allCity[i].Name + '</a></li>').attr('data-cityCode', Vcity.allCity[i].AreaCode).attr('data-cityName', Vcity.allCity[i].Name);
                            $("#CityInfo").append($li);
                        }
                    }
                    this.isEmpty = false;
                }
            }

        };
        //var test = new Vcity.CitySelector({ input: 'citySelect' });
        $.ajax({
            url: '/Mobile/GetProviceCityJsonData',
            type: 'post',
            async: true,
            data: { appId: getEsAppId() },
            error: function () {
                $("#ajaxLoadBlind").remove();
            },
            success: function (msg) {
                $("#ajaxLoadBlind").remove();
                if (!msg) {
                    toast("没有获取到数据");
                    return;
                }
                ChineseAreas = msg;
                test = new Vcity.CitySelector({ input: 'citySelect' });
                (function ($) {
                    $.scrollToID = $.fn.scrollToID = function (id, moreTop) {
                        var y = $(id).position().top - moreTop;
                        $(this).scrollTop(y);
                    };
                })(Zepto);
                InitLbs();
                /**
                * 搜索框事件
                */
                saveContextDTOByUrl();
                Vcity.allLetter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', '0', 'P', 'Q', 'R', 'S', 'T', 'W', 'X', 'Y', 'Z'];
                LoadInit();

                $('.ui-searchbar').on('click', function () {
                    $(this).parent().addClass('focus');
                    $(this).children('.ui-searchbar-input').children().focus();
                });
                $('.ui-searchbar .fa-times').on('click', function () {
                    $(this).prev().children().val('');
                    $("#citySelect").value = '';
                    $("#CityInfo").hide();
                    $("#rightIndex").hide();
                });
                $('.ui-searchbar .fa-search').on('click', function () {
                    var inputValue = document.getElementById("citySelect").value;
                    if (inputValue == '' || inputValue == undefined || inputValue == '搜索关键字')
                        return;
                    $("#CityInfo").show();
                    $("#rightIndex").hide();

                    //                var str;
                    //                var value = inputValue;
                    //                // 当value不等于空的时候执行
                    //                if (value !== '') {
                    //                    // 此处需设置中文输入法也可用onpropertychange
                    //                    for (var i = 0, n = Vcity.allCity.length; i < n; i++) {
                    //                        var reg = new RegExp("^" + value + "|\\|" + value, 'gi');
                    //                        if (reg.test(Vcity.allCity[i].SearchStr)) {
                    //                            var $li = $('<li class="table-view-cell"><a href="javascript:;">' + Vcity.allCity[i].Name + '</a></li>').attr('data-cityCode', Vcity.allCity[i].AreaCode).attr('data-cityName', Vcity.allCity[i].AreaCode);
                    //                            $("#CityInfo").append($li);
                    //                        }
                    //                    }
                    //                    this.isEmpty = false;
                    //                }

                });
                $("#currenCity").on('click', function () {
                    var cityCode = getCookie('cityCode');
                    var cityName = getCookie('cityName');
                    if (JsVilaDataNull(cityCode) && JsVilaDataNull(cityName)) {
                        setCookie("selectCityCode", cityCode);
                        setCookie("selectCityName", cityName);
                    }
                    goBack(true);
                });
                $('#CityInfo').on('click', '.table-view-cell', function () {
                    setCookie("selectCityCode", $(this).attr('data-citycode'));
                    setCookie("selectCityName", $(this).attr('data-cityname'));
                    goBack(true);
                });
                $('.ui-searchbar-cancel').on('click', function () {
                    $(this).parent().removeClass('focus');
                    $(this).prev().children('.ui-searchbar-input').children().val('');
                    $("#CityInfo").show();
                    $("#rightIndex").show();

                    InitLbs();
                    LoadInit();
                });

                $("#goBack").on('click', function () {
                    goBack(false);
                });
                (function ($) {
                    var letterUnit = $(".anchor a").height();
                    var letterLength = $(".anchor a").length - 1;
                    var letterTop = ($(window).height() - $('.anchor').height()) / 2;

                    var alphaTop = getPos($('.table-view')[0]).top;
                    $(".anchor").on("touchmove touchstart", function (e) {
                        e.preventDefault();
                        var touch = e.targetTouches[0];
                        if (e.targetTouches.length == 1) {
                            var i = parseInt((touch.clientY - letterTop) / letterUnit);
                            var t = $(this).find("a").eq(i <= 0 ? 0 : (i > letterLength ? letterLength : i)).attr('data-letter');
                            $(window).scrollToID("#" + t, alphaTop);
                        }
                    });
                })(Zepto);

                function getPos(obj) {
                    var t = 0;
                    while (obj) {
                        t += obj.offsetTop;
                        obj = obj.offsetParent;
                    }
                    return { top: t };
                }

            },
            beforeSend: function () {
                ajaxLoading('1', '');
            }
        });
    </script>
}
