<link rel="stylesheet" type="text/css" href="/Content/default/jquery.ui.jhtablebox.css" />
<link rel="stylesheet" type="text/css" href="/Content/default/ui.jqgrid.css" />
<link rel="stylesheet" type="text/css" href="/Content/css/common.css" />
<link href="../../Scripts/ztreejs/zTreeStyle/zTreeStyle.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="/Scripts/ztreejs/jquery.ztree.core-3.5.js"></script>
<script type="text/javascript" src="/Scripts/ztreejs/jquery.ztree.excheck-3.5.js"></script>
<script src="/Scripts/ztreejs/jquery.ztree.exedit-3.5.js" type="text/javascript"></script>
<script type="text/javascript" src="/Scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript" src="/Scripts/Grid/jquery.grid.base.js"></script>
<style type="text/css">
    .contentLeft
    {
        float: left; /*width:20%;*/
        width: 235px;
        height: 100%;
        min-width: 235px;
        overflow: hidden;
        border-right: 1px solid #CCD3DC;
    }
    
    .nav
    {
        height: 45px;
        background: url(../../Content/images/presentManage/bg.png) no-repeat;
    }
    .nav .navItemPic
    {
        float: left;
        display: block;
        width: 21px;
        height: 18px;
    }
    .nav .navItemText
    {
        margin-top: 20px;
        display: block;
    }
    .nav .nava
    {
        cursor: pointer;
        color: #53667F;
    }
    
    .contentRight
    {
        float: left;
        width: 80.5%;
    }
    .contentRight .title
    {
        height: 98px;
        color: #4E7093;
        line-height: 50px;
        background-color: #EFF1F4;
        padding-left: 10px;
        min-width: 600px;
    }
    .contentRight .label
    {
        padding-left: 10px;
    }
    
    .btn-primary
    {
        background-color: #77a701;
        background-image: none;
    }
</style>
<style type="text/css">
    li
    {
        list-style: circle;
        font-size: 12px;
    }
    li.title
    {
        list-style: none;
    }
    ul.list
    {
        margin-left: 17px;
    }
    div.content_wrap
    {
        width: 600px;
        height: 380px;
    }
    div.content_wrap div.left
    {
        float: left;
        width: 250px;
    }
    div.content_wrap div.right
    {
        float: right;
        width: 340px;
    }
    div.zTreeDemoBackground
    {
        width: 250px;
        height: 362px;
        text-align: left;
    }
    ul.ztree
    {
        margin-top: 10px;
        border: 1px solid #617775;
        background: #f0f6e4;
        overflow: auto;
    }
    ul.log
    {
        border: 1px solid #617775;
        background: #f0f6e4;
        width: 300px;
        height: 170px;
        overflow: hidden;
    }
    ul.log.small
    {
        height: 45px;
    }
    ul.log li
    {
        color: #666666;
        list-style: none;
        padding-left: 10px;
    }
    ul.log li.dark
    {
        background-color: #E3E3E3;
    }
    /* ruler */div.ruler
    {
        height: 20px;
        width: 220px;
        background-color: #f0f6e4;
        border: 1px solid #333;
        margin-bottom: 5px;
        cursor: pointer;
    }
    div.ruler div.cursor
    {
        height: 20px;
        width: 30px;
        background-color: #3C6E31;
        color: white;
        text-align: right;
        padding-right: 5px;
        cursor: pointer;
    }
</style>
<div>
    @*左侧分类树*@
    <div class="contentLeft">
        <div class="titA" style="text-align: center">
            分类管理
        </div>
        <div class="nav" style="padding-top: 10px;">
            <div class="fl ml10" onclick="ShowCategoryArea(0)" style="cursor: pointer;">
                <span class="navItemPic" style="background: url(../../Content/images/presentManage/add.png) no-repeat;">
                </span><a class="navItemText nava">添加</a>
            </div>
            <div class="fl ml15" onclick="DownCategorySort();" style="cursor: pointer;">
                <span class="navItemPic" style="background: url(../../Content/images/presentManage/xiayi.fw.png) no-repeat;">
                </span><a class="navItemText nava">下移</a>
            </div>
            <div class="fl ml15" onclick="UpCategorySort();" style="cursor: pointer;">
                <span class="navItemPic" style="background: url(../../Content/images/presentManage/shangyi.png) no-repeat;">
                </span><a class="navItemText nava">上移</a>
            </div>
            <div class="fl ml15" onclick="DeleteCategory();" style="cursor: pointer;">
                <span class="navItemPic" style="background: url(../../Content/images/presentManage/delete.png) no-repeat;">
                </span><a class="navItemText nava">删除</a>
            </div>
            <div class="fl ml15" onclick="ShowCategoryArea(1)" style="cursor: pointer;">
                <span class="navItemPic" style="background: url(../../Content/images/presentManage/eddit.png) no-repeat;">
                </span><a class="navItemText nava">修改</a>
            </div>
            <div style="clear: both;">
            </div>
        </div>
        <div class="content_wrap padding10" style="width: 234px; height: auto;">
            <div class="zTreeDemoBackground left">
                <ul id="leftTree" class="ztree" style="margin-top: 0px; width: 200px; height: 520px;">
                </ul>
            </div>
        </div>
    </div>
    @*右侧媒体列表*@
    <div class="contentRight" id="storycontentRight">
        @*表格操作区域*@
        <div class="title">
            <div>
                <label class="label">
                    APP名称：
                </label>
                <input type="text" class="inp-txt" id="txtAppName" maxlength="50" />
                <label class="label">
                    商品名称：
                </label>
                <input type="text" class="inp-txt" id="txtCommodityName" maxlength="50" />
                <a href="#Nogo" class="btn80 ml10" onclick="RefreshList();">查询</a>
            </div>
            <div>
                <a id="btnSelCategory" href="#Nogo" class="btn80 ml10" onclick="ShowSelCategoryTree();">
                    添加到分类</a> <span id="OtherCategoryArea"><a href="#Nogo" class="btn80 ml10" onclick="DelCommodityFromCategory();">
                        移除出分类</a> <a id="btnReOrder" href="#Nogo" class="btn80 ml10" onclick="ReOrderCommodityInCategory()">
                            保存排序</a>&nbsp;&nbsp;<label>
                                直接拖动商品即可排序</label></span>
            </div>
            <div style="clear: both">
            </div>
        </div>
        @*表格区域*@
        <div>
            <table id="CommodityGrid">
            </table>
            <div id="page">
            </div>
        </div>
    </div>
</div>
@*分类选择树*@
<div style="display: none;">
    <div id="selectTreeWrapper" style="padding: 10px 10px 10px 10px; margin: 0 auto;">
        <div class="content_wrap" style="width: 248px; height: 430px;">
            <div class="zTreeDemoBackground">
                <ul id="selectTree" class="ztree" style="width: 236px; height: 400px;">
                </ul>
            </div>
        </div>
        <div style="height: 40px; text-align: center; margin-top: 10px;">
            <a href="#Nogo" class="btn80 ml10" onclick="SelCategoryConfirm();">确定</a> <a href="#Nogo"
                class="btn80 ml10" onclick="SelCategoryCancel();">取消</a>
        </div>
    </div>
</div>
@*分类编辑*@
<div style="display: none;">
    <div id="categoryArea" style="padding: 10px 10px 10px 10px;">
        <table>
            <tr>
                <td>
                    <span>分类名称：</span>
                </td>
                <td>
                    <input id="txtCategoryName" class="inp-txt normal" type="text" maxlength="10" />
                </td>
            </tr>
            <tr>
                <td>
                    <span>父级分类：</span>
                </td>
                <td>
                    <select id="selParentNodes" class="select" style="margin: 6px 0; width: 169px">
                    </select>
                </td>
            </tr>
            <tr>
                <td>
                    <div>
                        <img class="tut" style="margin-top: 5px; cursor: pointer;" alt="" src="/Images/comment_pic5.png"
                            width="80" height="80" id="CategoryImg" />
                    </div>
                </td>
            </tr>
        </table>
        <div style="height: 40px; text-align: center; margin-top: 80px;">
            <a href="#nogo" onclick="ConfirmCategory()" class="btn120">确定</a> <a href="#nogo"
                onclick="CancelCategory();" class="btn120">取消</a>
        </div>
    </div>
</div>
<div id="loadImgDiv" style="overflow: hidden; width: auto; min-height: 0; height: 470px;
    display: none;">
    <iframe id="contentFrame" name="contentFrame" scrolling="no" src="" height="480"
        width="630" frameborder="0" style="border: 0; overflow: hidden;"></iframe>
</div>
<input type="hidden" id="hidCategoryId" />
<input type="hidden" id="hidCategoryAreaType" />
<input type="hidden" id="picture" />
<script type="text/javascript">
    //表格相关全局变量
    var Grid = {
        PageSize: 10,
        IsScroll: false,
        LastScrollTop: 0
    };
    //未分类节点数据
    var UnClassifiedNode = { id: "324517bd-e303-48d1-977f-43203f5b88bc", name: "未分类", "pId": "1" };
    //左侧分类树设置
    var setting = {
        view: {
            dblClickExpand: false,
            showLine: true,
            showIcon: true,
            selectedMulti: false
        },
        check: {
            enable: false,
            chkboxType: {
                "Y": "p",
                "N": "s"
            },
            chkStyle: "radio",
            radioType: "all" //标识整个Tree只准选中一个节点
        },
        callback: {
            onClick: zTreeOnClick,
            beforeDrag: function () { return false; }
        },
        data: {
            simpleData: {
                enable: true,
                idKey: "id",
                pIdKey: "pId"
            }
        },
        edit: {
            enable: true,
            drag: {
                isMove: false,
                prev: false,
                next: false,
                inner: false
            },
            showRemoveBtn: false,
            showRenameBtn: false
        }
    };
    //分类选择树设置
    var settingchx = {
        view: {
            dblClickExpand: false,
            showLine: true,
            showIcon: true,
            selectedMulti: false
        },
        check: {
            enable: true,
            chkboxType: {
                "Y": "p",
                "N": "s"
            },
            chkStyle: "checkbox"
        },
        callback: {
            onClick: zTreeChxOnClick,
            beforeDrag: function () { return false; }
        },
        data: {
            simpleData: {
                enable: true,
                idKey: "id",
                pIdKey: "pId"
            }
        },
        edit: {
            enable: true,
            drag: {
                isMove: false,
                prev: false,
                next: false,
                inner: false
            },
            showRemoveBtn: false,
            showRenameBtn: false
        }
    };
    //获取tree数据
    function GetTreeData() {
        var zNodes = [];
        var zNodesChx = [];
        var zNodesPar = [];
        $.ajax({
            url: "./GetSetCategory?" + new Date().getTime(),
            type: "POST",
            datatype: "json",
            async: false,
            success: function (res) {
                if (res.Success) {
                    zNodes.push({
                        id: "1",
                        pId: "0",
                        name: "分类",
                        open: true,
                        picturesPath: null
                    });
                    var parentIds = [];
                    for (var i = 0; i < res.data.length; i++) {
                        if (res.data[i].ParentId != "00000000-0000-0000-0000-000000000000") {
                            parentIds.push(res.data[i].ParentId);
                        }
                    }

                    for (var i = 0; i < res.data.length; i++) {

                        if (res.data[i].CategoryId != UnClassifiedNode.id) {
                            var nodeChx = {
                                id: res.data[i].CategoryId,
                                name: res.data[i].CategoryName,
                                pId: res.data[i].ParentId == "00000000-0000-0000-0000-000000000000" ? "1" : res.data[i].ParentId,
                                picturesPath: res.data[i].PicturesPath
                            };
                            if (res.data[i].HasChildren)
                                nodeChx.nocheck = true;
                            zNodesChx.push(nodeChx);
                        }
                        var node = {
                            id: res.data[i].CategoryId,
                            name: res.data[i].CategoryName,
                            pId: res.data[i].ParentId == "00000000-0000-0000-0000-000000000000" ? "1" : res.data[i].ParentId,
                            cName: res.data[i].CategoryName,
                            cCount: res.data[i].CommodityCount,
                            hasChildren: res.data[i].HasChildren,
                            picturesPath: res.data[i].PicturesPath
                        };
                        if (!node.hasChildren) {
                            node.name = node.cName + "(" + node.cCount + ")";
                        }
                        zNodes.push(node);



                    }
                    for (var i = 0; i < res.data.length; i++) {
                        if (res.data[i].ParentId == "00000000-0000-0000-0000-000000000000") {
                            var name = res.data[i].HasChildren ? res.data[i].CategoryName : res.data[i].CategoryName + "(" + res.data[i].CommodityCount + ")";
                            zNodesPar.push({
                                id: res.data[i].CategoryId,
                                Name: name
                            });
                        }
                    }
                }
            }
        });
        return { zNodes: zNodes, zNodesChx: zNodesChx, zNodesPar: zNodesPar };
    }
    //左侧树获取并选中一个节点
    function SelectFirstFinalNode() {
        var firstFinalNode = null;
        var treeObj = $.fn.zTree.getZTreeObj("leftTree");
        var root = treeObj.getNodes()[0];
        if (root.isParent) {
            firstFinalNode = root.children[0];
        }
        if (firstFinalNode != null) {
            treeObj.selectNode(firstFinalNode, false);
            $("#hidCategoryId").val(firstFinalNode.id);
        }
        return firstFinalNode;
    }
    //设置父级分类
    function InitSelParentNodes(zNodesPar, curVal) {
        $("#selParentNodes").empty();
        var optionDefault = $("<option>").val("1").text("根目录");
        $("#selParentNodes").append(optionDefault);
        var isSeled = false;
        if (zNodesPar && zNodesPar.length > 0) {
            for (var i = 0; i < zNodesPar.length; i++) {
                if (zNodesPar[i].id.toLowerCase() == '324517bd-e303-48d1-977f-43203f5b88bc') {
                    continue;
                }
                var option = $("<option>").val(zNodesPar[i].id).text(zNodesPar[i].Name);
                $("#selParentNodes").append(option);
                if (curVal && zNodesPar[i].id == curVal) {
                    $("#selParentNodes").val(curVal);
                    isSeled = true;
                }
            }
        }
        if (!isSeled) {
            $("#selParentNodes").val("1");
        }
    }
    //显示分类编辑区域
    function ShowCategoryArea(type) {
        var title;
        $("#hidCategoryAreaType").val(type);
        var treeObj = $.fn.zTree.getZTreeObj("leftTree");


        //        if (node.id != "1" && node.cCount > 0) {
        //            alert("请先删除该分类中商品，再进行操作");
        //            return false;
        //        }
        var treeData = GetTreeData();
        if (type == 0) {
            InitSelParentNodes(treeData.zNodesPar);
            title = "添加分类";
            $("#CategoryImg").attr('src', '/Images/comment_pic5.png');
            $("#txtCategoryName").val("");
            $("#picture").val('');
            $("#selParentNodes").removeAttr("disabled");
        } else {
            var curSelectNodes = treeObj.getSelectedNodes();
            var node = curSelectNodes && curSelectNodes.length > 0 ? curSelectNodes[0] : null;
            if (node) {

            } else {
                alert("请选择需要编辑的分类");
                return false;
            }
            if (node.id.toLowerCase() == "324517bd-e303-48d1-977f-43203f5b88bc") {
                alert("默认分类，不可修改");
                return false;
            }

            InitSelParentNodes(treeData.zNodesPar, node.pId);
            $("#selParentNodes").attr("disabled", "disabled");
            if (node.picturesPath) {
                $("#CategoryImg").attr('src', node.picturesPath);
                $("#picture").val(node.picturesPath);
            } else {
                $("#CategoryImg").attr('src', '/Images/comment_pic5.png');
                $("#picture").val('');
            }

            title = "修改分类";
            if (node.id == "1") {
                alert("默认分类，不可修改");
                return false;
            }
            $("#txtCategoryName").val(node.cName);

        }
        $("#categoryArea").jhtablebox({
            title: title,
            width: 450,
            height: 350,
            modal: true,
            resizable: false
        });
    }
    //添加、修改分类提交
    function ConfirmCategory() {
        var type = $("#hidCategoryAreaType").val();
        var categoryName = $.trim($("#txtCategoryName").val());
        var treeObj = $.fn.zTree.getZTreeObj("leftTree");
        if (categoryName.length == 0) {
            alert("请输入分类名称");
            return false;
        }
        if (categoryName.length > 30) {
            alert("分类名称不能超过30个字符");
            return false;
        }
        var parentName = $('#selParentNodes option:selected').text();
        if (parentName.indexOf('(') >= 0) {
            var cnt = parseInt(parentName.split('(')[1].split(')')[0]);
            if (cnt) {
                alert("请先删除父级分类下商品，再进行添加");
                return false;
            }
        }

        var parentId = '00000000-0000-0000-0000-000000000000';
        var selParentVal = $("#selParentNodes").val();
        if (selParentVal != "1") {
            parentId = selParentVal;
        }
        if (!$("#picture").val()) {
            alert("请选择分类图片");
            return false;
        }
        if (type == 0) {
            $.ajax({
                async: false,
                type: "POST",
                data: { categoryName: categoryName, parentId: parentId, picturesPath: $("#picture").val() },
                url: './AddCategory',
                dataType: "json",
                success: function (res) {
                    CancelCategory();
                    alert(res.Message);
                    if (res.Success) {
                        var newNode = {
                            id: res.CategoryId,
                            pId: parentId == "00000000-0000-0000-0000-000000000000" ? "1" : parentId,
                            name: categoryName + "(" + 0 + ")",
                            cName: categoryName,
                            cCount: 0,
                            picturesPath: $("#picture").val()
                        };
                        var node = treeObj.getNodeByParam("id", newNode.pId);
                        treeObj.addNodes(node, newNode);
                        if (node && node.name && node.name.indexOf('(') >= 0) {
                            node.name = node.name.split('(')[0];
                            treeObj.updateNode(node);
                        }
                    }
                }
            });
        } else {
            var node = null;
            var curSelectNodes = treeObj.getSelectedNodes();
            if (curSelectNodes && curSelectNodes.length > 0) {
                node = curSelectNodes[0];
            } else {
                alert("请选择要编辑的分类");
                return false;
            }
            $.ajax({
                async: false,
                type: "POST",
                data: { categoryId: node.id, categoryName: categoryName, picturesPath: $("#picture").val() },
                url: './UpdateCategory',
                dataType: "json",
                success: function (res) {
                    CancelCategory();
                    alert(res.Message);
                    if (res.Success) {
                        node.cName = categoryName;
                        node.picturesPath = $("#picture").val();
                        if (node.isParent)
                            node.name = node.cName;
                        else
                            node.name = node.cName + "(" + node.cCount + ")";
                        treeObj.updateNode(node);
                    }
                }
            });
        }
    }
    //隐藏分类编辑区域
    function CancelCategory() {
        $("#categoryArea").jhtablebox("hide");
    }
    //下移分类
    function DownCategorySort() {
        var treeObj = $.fn.zTree.getZTreeObj("leftTree");
        var curSelectNodes = treeObj.getSelectedNodes();
        if (curSelectNodes && curSelectNodes.length > 0) {
            var sourceNode = curSelectNodes[0];
            var targetNode = sourceNode.getNextNode();
            if (targetNode == null) {
                alert("已经是最后一个节点");
                return false;
            } else {
                $.ajax({
                    async: false,
                    type: "POST",
                    data: { categoryId: sourceNode.id, targetCategoryId: targetNode.id },
                    url: './ChangeCategorySort',
                    dataType: "json",
                    success: function (res) {
                        if (res.Success) {
                            treeObj.moveNode(targetNode, sourceNode, "next");
                        } else {
                            alert(res.Message);
                        }
                    }
                });
            }
        } else {
            alert("请选择要移动的分类");
        }
    }
    //上移分类
    function UpCategorySort() {
        var treeObj = $.fn.zTree.getZTreeObj("leftTree");
        var curSelectNodes = treeObj.getSelectedNodes();
        if (curSelectNodes && curSelectNodes.length > 0) {
            var sourceNode = curSelectNodes[0];
            var targetNode = sourceNode.getPreNode();
            if (targetNode == null) {
                alert("已经是第一个节点");
                return false;
            } else {
                $.ajax({
                    async: false,
                    type: "POST",
                    data: { categoryId: sourceNode.id, targetCategoryId: targetNode.id },
                    url: './ChangeCategorySort',
                    dataType: "json",
                    success: function (res) {
                        if (res.Success) {
                            treeObj.moveNode(targetNode, sourceNode, "prev");
                        } else {
                            alert(res.Message);
                        }
                    }
                });
            }
        } else {
            alert("请选择要移动的分类");
        }
    }
    //删除分类
    function DeleteCategory() {
        var treeObj = $.fn.zTree.getZTreeObj("leftTree");
        var curSelectNodes = treeObj.getSelectedNodes();
        if (curSelectNodes && curSelectNodes.length > 0) {
            var node = curSelectNodes[0];
            if (node.id == "1") {
                alert("默认分类，不可删除");
                return false;
            }
            $("<div></div>").jhtablebox({
                type: "Confirm",
                title: "提示",
                content: "确认删除？",
                autoOpen: true,
                confirm: function () {
                    $.ajax({
                        async: false,
                        type: "POST",
                        data: { categoryId: node.id },
                        url: './DelCategory',
                        dataType: "json",
                        success: function (res) {
                            alert(res.Message);
                            if (res.Success) {
                                var treeObj = $.fn.zTree.getZTreeObj("leftTree");
                                treeObj.removeNode(node);
                            }
                        }
                    });
                }
            });
        } else {
            alert("请选择需要删除的分类");
        }
    }
    //左侧树节点点击事件
    function zTreeOnClick(event, treeId, treeNode) {
        if (treeNode.isParent) {
            var zTree = $.fn.zTree.getZTreeObj("leftTree");
            zTree.expandNode(treeNode);
        }
        $("#hidCategoryId").val(treeNode.id);
        if (treeNode.id == UnClassifiedNode.id) {
            $("#btnSelCategory").show();
            $("#OtherCategoryArea").hide();
        } else {
            $("#btnSelCategory").hide();
            $("#OtherCategoryArea").show();
        }
        RefreshList();
    }
    //左侧树节点点击事件
    function zTreeChxOnClick(event, treeId, treeNode) {
        if (treeNode.isParent) {
            var zTree = $.fn.zTree.getZTreeObj("selectTree");
            zTree.expandNode(treeNode);
        }
    }

    //刷新分类节点商品数
    function UpdateCommodityCount(categoryId) {
        $.ajax({
            async: false,
            type: "POST",
            data: { categoryId: categoryId },
            url: './GetCommodityCountInCategory',
            dataType: "json",
            success: function (res) {
                var treeObj = $.fn.zTree.getZTreeObj("leftTree");
                var node = treeObj.getNodeByParam("id", categoryId, null);
                node.cCount = res.Count;
                node.name = node.cName + "(" + node.cCount + ")";
                treeObj.updateNode(node);
            }
        });
    }
</script>
<script type="text/javascript">
    //选择分类按钮事件
    function ShowSelCategoryTree() {
        var commodityIdArr = $("#CommodityGrid").jqGrid('getGridParam', 'selarrrow');
        if (commodityIdArr.length > 0) {
            var treeData = GetTreeData();
            $.fn.zTree.destroy("selectTree");
            $.fn.zTree.init($("#selectTree"), settingchx, treeData.zNodesChx);
            $("#selectTreeWrapper").jhtablebox({
                title: "选择分类",
                width: 270,
                height: 540,
                modal: true,
                resizable: false
            });
        } else {
            alert("请选择商品");
        }
    }
    //分类选择页面确定按钮事件-添加商品到分类
    function SelCategoryConfirm() {
        var checkedNodes = $.fn.zTree.getZTreeObj("selectTree").getCheckedNodes(true);
        if (checkedNodes && checkedNodes.length > 0) {
            var categoryIds = "", commodityIds = "";
            var commodityIdArr = $("#CommodityGrid").jqGrid('getGridParam', 'selarrrow');
            for (var i = 0; i < checkedNodes.length; i++) {
                categoryIds += checkedNodes[i].id + ",";
            }
            for (var i = 0; i < commodityIdArr.length; i++) {
                commodityIds += commodityIdArr[i] + ",";
            }
            categoryIds = categoryIds.length > 0 ? categoryIds.substr(0, categoryIds.length - 1) : categoryIds;
            commodityIds = commodityIds.length > 0 ? commodityIds.substr(0, commodityIds.length - 1) : commodityIds;
            $.ajax({
                async: false,
                type: "POST",
                data: { categoryIds: categoryIds, commodityIds: commodityIds },
                url: './AddCommodityToCategory',
                dataType: "json",
                success: function (res) {
                    alert(res.Message);
                    for (var i = 0; i < checkedNodes.length; i++) {
                        UpdateCommodityCount(checkedNodes[i].id);
                    }
                }
            });
            $("#selectTreeWrapper").jhtablebox("hide");
        } else {
            alert("请选择分类");
        }
    }
    //分类选择页面取消按钮事件
    function SelCategoryCancel() {
        $("#selectTreeWrapper").jhtablebox("hide");
    }
</script>
<script type="text/javascript">
    //从分类中移除商品
    function DelCommodityFromCategory() {
        var categoryId = $("#hidCategoryId").val();
        var commodityIds = "";
        var commodityIdArr = $("#CommodityGrid").jqGrid('getGridParam', 'selarrrow');
        if (commodityIdArr.length == 0) {
            alert("请选择需要移除的商品");
            return false;
        }
        for (var i = 0; i < commodityIdArr.length; i++) {
            commodityIds += commodityIdArr[i] + ",";
        }
        commodityIds = commodityIds.length > 0 ? commodityIds.substr(0, commodityIds.length - 1) : commodityIds;
        $.ajax({
            async: false,
            type: "POST",
            data: { categoryId: categoryId, commodityIds: commodityIds },
            url: './DelCommodityFromCategory',
            dataType: "json",
            success: function (res) {
                alert(res.Message);
                RefreshList();
                UpdateCommodityCount(categoryId);
            }
        });
    }
    //保存排序按钮事件
    function ReOrderCommodityInCategory() {
        var records = $("#CommodityGrid").getGridParam("records");
        if (records <= 0) {
            alert("没有需要排序的记录");
            return false;
        }
        var categoryId = $("#hidCategoryId").val();
        var commodityIds = "", commoditySorts = "";
        var commodityIdArr = $("#CommodityGrid").jqGrid('getDataIDs');
        for (var i = 0; i < commodityIdArr.length; i++) {
            commodityIds += commodityIdArr[i] + ",";
            commoditySorts += $("#" + commodityIdArr[i] + " td").eq(0).text() + ",";
        }
        commodityIds = commodityIds.length > 0 ? commodityIds.substr(0, commodityIds.length - 1) : commodityIds;
        commoditySorts = commoditySorts.length > 0 ? commoditySorts.substr(0, commoditySorts.length - 1) : commoditySorts;
        $.ajax({
            async: false,
            type: "POST",
            data: { categoryId: categoryId, commodityIds: commodityIds, commoditySorts: commoditySorts },
            url: './ReOrderCommodityInCategory',
            dataType: "json",
            success: function (res) {
                alert(res.Message);
                RefreshList(0);
            }
        });
    }
    //初始化表格
    function InitGrid() {
        var appName = $.trim($("#txtAppName").val());
        var commodityName = $.trim($("#txtCommodityName").val());
        var categoryId = $("#hidCategoryId").val();
        var data = {
            "appName": appName,
            "commodityName": commodityName,
            "categoryId": categoryId,
            "PageNo": 1,
            "PageSize": Grid.PageSize
        };
        $("#CommodityGrid").jqGrid({
            datatype: "json",
            postData: data,
            url: "GetCommodityInCategory",
            mtype: 'POST',
            colNames: ['AppId', 'APP图标', 'APP名称', '商品图片', '商品名称', '价格(元)', '库存', '操作'],
            colModel: [{
                name: 'AppId',
                index: 'AppId',
                width: 5,
                align: "center",
                sortable: false,
                hidden: true
            },
            {
                name: 'AppIcon',
                index: 'AppIcon',
                width: 60,
                align: "center",
                sortable: false,
                formatter: FormatterColumnAppIcon
            },
            {
                name: 'AppName',
                index: 'AppName',
                width: 200,
                align: "center",
                sortable: false
            },
            {
                name: 'CommodityPic',
                index: 'CommodityPic',
                width: 60,
                align: "center",
                sortable: false,
                formatter: FormatterColumnCommodityPic
            },
            {
                name: 'CommodityName',
                index: 'CommodityName',
                width: 200,
                align: "center",
                sortable: false
            },
            {
                name: 'CommodityPrice',
                index: 'CommodityPrice',
                width: 100,
                align: "center",
                sortable: false
            },
            {
                name: 'CommodityStock',
                index: 'CommodityStock',
                width: 100,
                align: "center",
                sortable: false
            },
            {
                name: 'Operation',
                index: 'Operation',
                width: 120,
                align: "center",
                sortable: false,
                formatter: FormatterColumn
            }],
            rowNum: Grid.PageSize,
            pager: 'page',
            pagerAlone: true,
            height: '100%',
            multiselect: true,
            autowidth: true,
            multiboxonly: false,
            forceFit: true,
            scroll: false,
            shrinkToFit: false,
            rownumbers: true,
            gridComplete: function () {
                if (Grid.IsScroll) $(".ui-jqgrid-bdiv").scrollTop(Grid.LastScrollTop);
                Grid.IsScroll = false;
                Grid.LastScrollTop = 0;

                var curPage = $("#CommodityGrid").getGridParam("page");
                var records = $("#CommodityGrid").getGridParam("records");
                var totalPage = 0;
                var temp = records % Grid.PageSize;
                if (temp == 0) totalPage = records / Grid.PageSize;
                else totalPage = parseInt(records / Grid.PageSize) + 1;
                if (curPage == 1) {
                    $(".ui-row-ltr:first > td:last > a:last").hide();
                    $(".ui-row-ltr:first > td:last > a:first").hide();
                }
                if (curPage == totalPage) $(".ui-row-ltr:last > td:last > a:first").next().hide();

                $("#btnReOrder").removeClass("btn-primary");
            }
        });
    }
    //格式化app图标
    function FormatterColumnAppIcon(callvalue, opts, rowdata) {
        return "<img width=\"45\" height=\"40\" src=\"" + callvalue + "\" />";
    }
    //格式化商品图片
    function FormatterColumnCommodityPic(callvalue, opts, rowdata) {
        return "<img width=\"45\" height=\"40\" src=\"" + callvalue + "\" />";
    }
    //格式化操作
    function FormatterColumn(callvalue, opts, rowdata) {
        if ($("#hidCategoryId").val() == UnClassifiedNode.id || $.trim($("#txtAppName").val()).length > 0 || $.trim($("#txtCommodityName").val()).length > 0) {
            return "";
        } else {
            return "<a href=\"#nogo\" onclick=\"ChangeCommodityOrderInCategory('" + opts.rowId + "','up')\">上移</a> "
                + " <a href=\"#nogo\" onclick=\"ChangeCommodityOrderInCategory('" + opts.rowId + "','down')\">下移</a> "
            + " <a href=\"#nogo\" onclick=\"TopCommodityOrderInCategory('" + opts.rowId + "')\">置顶</a> ";
        }
    }
    //刷新列表
    function RefreshList(pageNo) {
        var isPageNo = typeof (pageNo) == "number";
        if (isPageNo) {
            if (pageNo <= 0) pageNo = $("#CommodityGrid").getGridParam("page");
            Grid.IsScroll = true;
            Grid.LastScrollTop = $(".ui-jqgrid-bdiv").scrollTop();
        } else {
            pageNo = 1;
        }
        var appName = $.trim($("#txtAppName").val());
        var commodityName = $.trim($("#txtCommodityName").val());
        var categoryId = $("#hidCategoryId").val();
        if (categoryId == UnClassifiedNode.id || appName.length > 0 || commodityName.length > 0) {
            $("#btnReOrder").hide().next("label").hide();
            DisableSort();
        } else {
            $("#btnReOrder").show().next("label").show();
            EnableSort();
        }
        var data = {
            "appName": appName,
            "commodityName": commodityName,
            "categoryId": categoryId,
            "PageNo": pageNo,
            "PageSize": Grid.PageSize
        };
        $('#CommodityGrid').jqGrid('setGridParam', {
            datatype: "json",
            postData: data,
            url: 'GetCommodityInCategory?' + new Date().getTime(),
            mtype: 'POST'
        });
        $('#CommodityGrid').trigger("reloadGrid", [{
            page: pageNo
        }]);
    }
    //调整分类中商品排序(上移\下移)
    function ChangeCommodityOrderInCategory(commodityId, direction) {
        var categoryId = $("#hidCategoryId").val();
        $.ajax({
            async: false,
            type: "POST",
            data: { categoryId: categoryId, commodityId: commodityId, direction: direction },
            url: './ChangeCommodityOrderInCategory',
            dataType: "json",
            success: function (res) {
                alert(res.Message);
                RefreshList(0);
            }
        });
    }
    function TopCommodityOrderInCategory(commodityId) {
        var categoryId = $("#hidCategoryId").val();
        $.ajax({
            async: false,
            type: "POST",
            data: { categoryId: categoryId, commodityId: commodityId },
            url: './TopCommodityOrderInCategory',
            dataType: "json",
            success: function (res) {
                alert(res.Message);
                RefreshList(0);
            }
        });
    }
</script>
<script type="text/javascript">
    function BindSort() {
        $("#CommodityGrid tbody").sortable({
            containment: "parent",
            scroll: false,
            distance: 5,
            helper: function (e, ui) {
                ui.children().each(function () {
                    $(this).width($(this).width() - 1);
                });
                return ui;
            },
            axis: "y",
            start: function (e, ui) {

            },
            update: function (e, ui) {

            },
            stop: function (e, ui) {
                var preCount = ($("#CommodityGrid").getGridParam("page") - 1) * Grid.PageSize;
                $("#CommodityGrid tbody tr:gt(0)").each(function (i) {
                    $(this).children("td:eq(0)").attr("title", preCount + i + 1).text(preCount + i + 1);
                });
                $(".ui-row-ltr").each(function (i) {
                    $(this).find("td:last a").hide();
                });
                $("#btnReOrder").addClass("btn-primary");
            }
        });

    }
    function EnableSort() {
        $("#CommodityGrid tbody").sortable("option", "disabled", false);
    }
    function DisableSort() {
        $("#CommodityGrid tbody").sortable("option", "disabled", true);
    }
</script>
<script type="text/javascript">
    //调整页面布局
    function AdjustLayout() {
        $(".contentLeft").height($(window).height());
        $("#leftTree").height($(window).height() - $(".contentLeft .titA").height() - $(".contentLeft .nav").height() - 50);
        $(".contentRight").width($(window).width() - $(".contentLeft").width() - 5);
        $("#CommodityGrid").setGridWidth($(window).width() - $(".contentLeft").width() - 15);
        $("#CommodityGrid").setGridHeight($(window).height() - $(".contentRight .title").height() - 65);
    }
    //页面加载
    $(function () {
        var treeData = GetTreeData();
        $.fn.zTree.init($("#leftTree"), setting, treeData.zNodes);


        var firstFinalNode = SelectFirstFinalNode();
        if (firstFinalNode != null) {
            if (firstFinalNode.id == UnClassifiedNode.id) {
                $("#btnSelCategory").show();
                $("#OtherCategoryArea").hide();
            } else {
                $("#btnSelCategory").hide();
                $("#OtherCategoryArea").show();
            }
            InitGrid();
            BindSort();
        }

        AdjustLayout();
        $(window).resize(function () {
            AdjustLayout();
        });
        $('#CategoryImg').click(function () {
            var self = this;
            upImageCallback.callback_1 = function (data) {
                self.src = data;
                $('#picture').val(data);
                dialogImgClosed();
            };
            ShowUpImg({
                imgPath: '',
                width: '100',
                height: '100',
                windowTitle: '商品缩略图',
                callback: 'callback_1'
            });
        });
    });
</script>
