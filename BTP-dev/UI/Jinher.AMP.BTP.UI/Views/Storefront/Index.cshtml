@{
    Layout = "~/Views/Shared/_MobileFittedLayout.cshtml";
}
@section CssStyles
{
    <link href="/Content/Mobile/zphStyle/storesList.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="http://cache.amap.com/lbs/static/main1119.css" />
}
@section ClientScript
{
    <script type="text/javascript" src="https://webapi.amap.com/maps?v=1.3&plugin=AMap.Driving&key=@Jinher.AMP.BTP.Common.CustomConfig.AmapKey"></script>
    <script src="/Scripts/CommLib.js" type="text/javascript"></script>
        <script type="text/javascript">

            var ajaxLoadingSingle = (function () {
                function initLoading() {
                    var blind = $('body').find("#ajaxLoadBlind");
                    if (blind.length > 0) {
                        return;
                    }
                    //蒙版
                    blind = $('<div></div>');
                    //蒙版相关css
                    blind.css({
                        'position': 'fixed',
                        'z-index': '10000',
                        'opacity': 0.2,
                        'backgroundColor': '#ccc',
                        'height': '100%',
                        'width': '100%',
                        'top': 0,
                        'left': 0
                    });
                    //蒙版ID值
                    blind.attr('id', 'ajaxLoadBlind');

                    //ajaxLoading盒子ID对象
                    var loading = $('#ajaxLoading_img');
                    loading = $('<div></div>');
                    loading.attr('id', 'ajaxLoading_img');
                    loading.css({
                        'position': 'absolute',
                        'z-index': '99',
                        'left': '50%',
                        'margin-left': '-16px',
                        'top': '50%',
                        'margin-top': '-16px'
                    });
                    loading.append('<img src="/Content/images/ajax-loader.gif" />');
                    //blind.css({ 'position': 'relative' });
                    blind.append(loading);
                    $('body').append(blind);
                }

                function show() {
                    initLoading();
                    var blind = $('body').find("#ajaxLoadBlind");
                    if (blind.length == 0) {
                        return;
                    }
                    blind.show();
                }
                function hide() {
                    var blind = $('body').find("#ajaxLoadBlind");
                    if (blind.length == 0) {
                        return;
                    }
                    blind.hide();
                }

                var loadingSingle = new Object();
                loadingSingle.show = show;
                loadingSingle.hide = hide;
                return loadingSingle;
            } ())

            ////string.format.
            ////两种调用方式
            //var template1 = "我是{0}，今年{1}了";
            //var template2 = "我是{name}，今年{age}了";
            //var result1 = template1.format("loogn", 22);
            //var result2 = template2.format({ name: "loogn", age: 22 });
            ////两个结果都是"我是loogn，今年22了"
            String.prototype.format = function (args) {
                var result = this;
                if (arguments.length > 0) {
                    if (arguments.length == 1 && typeof (args) == "object") {
                        for (var key in args) {
                            if (args[key] != undefined) {
                                var reg = new RegExp("({" + key + "})", "g");
                                result = result.replace(reg, args[key]);
                            }
                        }
                    }
                    else {
                        for (var i = 0; i < arguments.length; i++) {
                            if (arguments[i] != undefined) {
                                var reg = new RegExp("({[" + i + "]})", "g");
                                result = result.replace(reg, arguments[i]);
                            }
                        }
                    }
                }
                return result;
            }
            //JS验证 不是有效的值
            function JsVilaDataNull(obj) {
                if (obj != undefined && obj != "" && obj != "null" && obj != null && obj != "undefined" && obj) {
                    return true;
                }
                else {
                    return false;
                }
            }


            //门店项模板html.
            var _siTemplateHtml = "";
            //当前页码
            var _pageIndex = 1;

            //每页加载数据条数。
            var _pageSize = 20;

            //是不是最后一页。
            var _isLastPage = false;

            //门店信息列表。
            var _storeData = new Array();

            //当前位置。
            var _position = new Object();
            //高德地图获取当前位置。
            var map, geolocation;
            ////构造路线导航类
            var driving;


            $(function () {
                _siTemplateHtml = $("#divStoreItemTemplate").html();

                //页面title.
                if (JsVilaDataNull("@ViewBag.Title")) {
                    document.title = "@ViewBag.Title";
                }

                ajaxLoadingSingle.show();
                //门店项点击事件。
                $("#divStoreContainer").on("click", 'div[tag="storeItem"]', function () {
                    var storeId = $(this).attr("storeId");
                    var storeInfo = _storeData.GetFirstElement("Id", storeId);
                    if (storeInfo == null) {
                        return;
                    }
                    sessionStorage.storeInfo = JSON.stringify(storeInfo);
                    document.location.href = "/Storefront/Map";
                    //// 根据起终点经纬度规划驾车导航路线
                    //driving.search(new AMap.LngLat(_position.getLng(), _position.getLat()), new AMap.LngLat(storeInfo.XAxis, storeInfo.YAxis));

                    ////点击门店在地图上标注门店位置，并显示电话号码。
                    //// 设置缩放级别和中心点
                    //map.setZoomAndCenter(14, [storeInfo.XAxis, storeInfo.YAxis]);
                    //// 在新中心点添加 marker 
                    //var marker = new AMap.Marker({
                    //    map: map,
                    //    position: [storeInfo.XAxis, storeInfo.YAxis]
                    //});
                });

                $("#btnReloadData").on("click", function () {
                    document.location.href = "";
                });
                //$("#btnTryNetLink").on("click", function () {
                //    document.location.href = "";
                //});

                //加载地图，调用浏览器定位服务
                map = new AMap.Map('container', {
                    resizeEnable: true
                    //, center: [116.397428, 39.90923] //地图中心点
                    //, zoom: 13 //地图显示的缩放级别
                });
                map.plugin('AMap.Geolocation', function () {
                    geolocation = new AMap.Geolocation({
                        enableHighAccuracy: true, //是否使用高精度定位，默认:true
                        timeout: 10000,          //超过10秒后停止定位，默认：无穷大
                        buttonOffset: new AMap.Pixel(10, 20), //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)
                        zoomToAccuracy: true,      //定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false
                        buttonPosition: 'RB'
                    });
                    map.addControl(geolocation);
                    geolocation.getCurrentPosition();
                    AMap.event.addListener(geolocation, 'complete', onComplete); //返回定位信息
                    AMap.event.addListener(geolocation, 'error', onError);      //返回定位出错信息
                });

                //构造路线导航类
                driving = new AMap.Driving({
                    map: map
                    //,panel: "panel"
                });

                //滚动加载
                var scroller = $('#scroller').scrollLoad({
                    loadDownFn: function (me) { //下拉加载数据
                        if (!_isLastPage) {
                            _pageIndex++;
                            GetStoreByLocation();
                        }
                        /*在这添加数据*/
                        me.resetload();
                    },
                    loadUpFn: function (me) {//上拉刷新
                        _pageIndex = 1;
                        _isLastPage = false;
                        $("#divStoreContainer").html("");
                        GetStoreByLocation();
                        me.resetload();
                    }
                });

            });


            //解析定位结果
            function onComplete(data) {
                ajaxLoadingSingle.hide();
                if (_position.getLng) {
                    return;
                }
                _position = data.position;
                sessionStorage.currentUserLongitude = _position.getLng();
                sessionStorage.currentUserLatitude = _position.getLat();
                GetStoreByLocation();
            }
            //解析定位错误信息
            function onError(data) {
                ajaxLoadingSingle.hide();
            }

            //获取门店列表。
            function GetStoreByLocation() {
                getDataAjax2({
                    url: '/Storefront/GetStoreByLocation',
                    type: 'post',
                    data: { AppId: getQueryString("appId"), Longitude: _position.getLng(), Latitude: _position.getLat(), CurrentPageIndex: _pageIndex, PageSize: _pageSize },
                    beforeSend: function () {
                        //ajaxLoading(1, '');
                    },
                    complete: function () {
                        //ajaxLoading(1, ''); 
                    },
                    callback: function (data) {
                        //没有数据。
                        if (_pageIndex == 1 && (data.Stroes == null || data.Stroes.length == 0)) {
                            $("div.no-data").show();
                            $("#divStoreContainer").hide();
                        }
                        else {
                            $("div.no-data").hide();
                            $("#divStoreContainer").show();
                        }

                        if (data.Stroes != null && data.Stroes.length > 0) {
                            _storeData = _storeData.concat(data.Stroes);
                            if (data.Stroes.length < _pageSize) {
                                _isLastPage = true;
                            }
                        }
                        else {
                            _isLastPage = true;
                        }
                        var html = getStoreList(data.Stroes);
                        $("#divStoreContainer").append(html);
                    },
                    error: function (date, text) {
                    }
                });
            }

            function getStoreList(data) {
                var storeHtml = "";
                if (data == null || data.length == 0) {
                    return storeHtml;
                }
                for (var i = 0; i < data.length; i++) {
                    data[i].Phone1 = data[i].Phone[0].PhoneNumber;
                    data[i].PhoneCount = data[i].Phone.length;
                    data[i].DistanceText = data[i].Distance > 1000 ? (data[i].Distance / 1000).toFixed(2) + "km" : data[i].Distance.toFixed(0) + "m";
                    data[i].PhoneCountDisplay = data[i].PhoneCount > 1 ? "inline-block" : "none";
                    data[i].srckey = "src";
                    storeHtml += _siTemplateHtml.format(data[i]);
                }
                return storeHtml;
            }
    </script>
}
 
<head lang="en">
    <title>门店信息</title>
</head>

    <div id="container" style="display: none;">
    </div>
    <div id="panel" style="display: none;">
    </div>
    <div class="page">
        @*  <header class="bar bar-nav">
            <a class="fa fa-chevron-left pull-left" href="javascript:void(0);"></a>
            <h1 class="title">门店信息</h1>
        </header>*@
        <div class="content">
            <div class="stores-list">
                <div id="scroller" class="scroll-load">
                    <div id="divStoreContainer">
                    </div>
                </div>
            </div>
            <div class="no-data" style="display: none;">
                <div class="ui-notice">
                    <i class="fa fa-frown-o"></i>
                    <p>
                        很抱歉，无数据</p>
                    <div class="ui-notice-btn">
                        <button class="btn btn-block active" id="btnReloadData" style="background-color:#ff0054;color:#ffffff;border:0px;">
                            重试</button>
                    </div>
                </div>
            </div>
            <div class="link-fail" style="display: none;">
                <div class="ui-notice">
                    <i class="fa fa-wifi"></i>
                    <p>
                        网络连接失败</p>
                    <div class="ui-notice-btn">
                        <button class="btn btn-block active" id="btnTryNetLink">
                            重试</button>
                    </div>
                    <div class="no-wifi">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="divStoreItemTemplate" style="display: none;"> <div href="javascript:void(0);"
    tag="storeItem" storeid="{Id}"> <div class="info-intro"> <div class="pic"> <img
    {srckey}="{PicPath}" alt="" /> </div> <div class="info-text"> <div class="name">
    {StoreName}</div> <div class="address"> <div class="fa fa-map-marker"> </div> <div
    class="address-info"> {Address}</div> <span class="distance" >{DistanceText}</span>
    <span class="fa fa-angle-right"></span> </div> <div class="phone"> <i class="fa
    fa-phone"></i><span class="phone-number">{Phone1}</span><span class="number" style="display:
    {PhoneCountDisplay}">等<span>{PhoneCount}</span>个号码</span> </div> </div> </div> </div>
    </div>
 
